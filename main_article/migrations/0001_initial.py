# Generated by Django 2.0.7 on 2018-07-17 07:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import extra_apps.ckeditor_uploader.fields
import imagekit.models.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, unique=True, verbose_name='标题')),
                ('content', extra_apps.ckeditor_uploader.fields.RichTextUploadingField(verbose_name='正文')),
                ('likes', models.IntegerField(default=0, verbose_name='赞')),
                ('dislikes', models.IntegerField(default=0, verbose_name='踩')),
                ('pubDateTime', models.DateTimeField(auto_now_add=True, verbose_name='发表时间')),
                ('upDateTime', models.DateTimeField(auto_now_add=True, verbose_name='修改时间')),
                ('read_num', models.IntegerField(default=0, verbose_name='阅读次数')),
                ('comment_num', models.IntegerField(default=0, verbose_name='评论数')),
                ('excerpt', models.CharField(blank=True, max_length=200, verbose_name='摘录')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_articles', to=settings.AUTH_USER_MODEL, verbose_name='作者')),
            ],
            options={
                'verbose_name': '文章',
                'verbose_name_plural': '文章',
                'ordering': ['-pubDateTime'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=12, unique=True)),
                ('pubDateTime', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '文章分类',
                'verbose_name_plural': '文章分类',
                'ordering': ['-pubDateTime'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'verbose_name': '关注',
                'verbose_name_plural': '关注',
                'ordering': ['-created_time'],
            },
        ),
        migrations.CreateModel(
            name='Daily_click',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('click_status', models.NullBooleanField(verbose_name='签到状态')),
                ('created_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='签到时间')),
            ],
            options={
                'verbose_name': '每日签到',
                'verbose_name_plural': '每日签到',
                'ordering': ['-created_time'],
            },
        ),
        migrations.CreateModel(
            name='First_login',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_login', models.BooleanField(default=True, verbose_name='第一次登陆')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_first_login', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '首登',
                'verbose_name_plural': '首登',
            },
        ),
        migrations.CreateModel(
            name='Userprofile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(blank=True, max_length=30, null=True, verbose_name='昵称')),
                ('qq', models.CharField(blank=True, max_length=20, null=True, verbose_name='QQ号码')),
                ('weibourl', models.URLField(blank=True, max_length=100, null=True, verbose_name='个人微博地址')),
                ('address', models.CharField(blank=True, max_length=128, null=True, verbose_name='地址')),
                ('bonuspoints', models.PositiveIntegerField(default=0, verbose_name='饼果')),
                ('avatar', imagekit.models.fields.ProcessedImageField(default='avatar/default.png', upload_to='avatar', verbose_name='头像')),
                ('following', models.ManyToManyField(blank=True, related_name='followers', through='main_article.Contact', to='main_article.Userprofile')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '个人信息',
                'verbose_name_plural': '个人信息',
            },
        ),
        migrations.AddField(
            model_name='daily_click',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_click', to='main_article.Userprofile', verbose_name='签到用户'),
        ),
        migrations.AddField(
            model_name='contact',
            name='from_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_from', to='main_article.Userprofile', verbose_name='用户'),
        ),
        migrations.AddField(
            model_name='contact',
            name='to_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_to', to='main_article.Userprofile', verbose_name='关注'),
        ),
        migrations.AddField(
            model_name='article',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_article.Category', verbose_name='分类'),
        ),
        migrations.AddField(
            model_name='article',
            name='superlikes',
            field=models.ManyToManyField(blank=True, related_name='user_likes', to=settings.AUTH_USER_MODEL, verbose_name='超级赞'),
        ),
        migrations.AddField(
            model_name='article',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='(选填)用英文输入法逗号来添加标签', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='标签集'),
        ),
    ]
