"""
Django settings for blog project.

Generated by 'django-admin startproject' using Django 1.11.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import sys
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0,os.path.join(BASE_DIR,'extra_apps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'qq3x%odtj1jaf*=5c3!7kp@fkbd@b6cs=af%_($(_lhoh34dc3'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', '172.96.18.168','localhost ', '.pancake.red' ,'.znegzhengrong.com']


# Application definition

INSTALLED_APPS = [
    #django-suit theme
    'suit',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'main_article',
    #ckeditor
    'ckeditor',
    'ckeditor_uploader',
    #allauth
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    #allauth provider
    'allauth.socialaccount.providers.github',
    #accountprofile
    'crispy_forms',
    'imagekit',
    #comment
    'mptt',
    'easy_comment',
    'notifications',
    #登陆状态
    'online_status',
    #标签
    'taggit',
    #留言板
    'guestbook',      
    #用户动态
    'activity_stream',
    #private_chat//私信
    'extra_apps.django_private_chat'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'online_status.middleware.OnlineStatusMiddleware',
]

ROOT_URLCONF = 'blog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'blog.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME':'blogDB',
        'USER':'postgres',
        'PASSWORD':'5432',
        'HOST':'localhost',
        'PORT':'',
        
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True
#django-suit config
SUIT_CONFIG = {
    'ADMIN_NAME': 'Zzr_Blog',
    'LIST_PER_PAGE': 15,
    'MENU': (
        '-', '-',
        {'label': '快速访问', 'icon':None, 'models': ({'model':'main_article.article', 'label': '文章'},{'model': 'easy_comment.comment', 'label': '评论'},{'model': 'guestbook.guestbook_post', 'label': '留言板'},{'model': 'auth.user', 'label': '用户'},{'model': 'main_article.userprofile', 'label': '用户信息'},{'model': 'activity_stream.action', 'label': '用户动态'},{'model': 'main_article.daily_click', 'label': '用户签到'},)},
        '-', '-', 
        # Rename app and set icon
        {'app': 'main_article','label': '博客系统'},     
        {'app': 'easy_comment','label': '评论系统'},
        {'app': 'guestbook','label': '留言板'},
        {'app': 'notifications','label': '通知'},
        {'app': 'online_status','label': '在线状态'},
        {'app': 'taggit','label': '标签管理'},
        {'app': 'activity_stream','label': '用户动态'},
        {'app': 'django_private_chat','label': '用户私信'},
        '-','-',         
        {'app': 'account','label': '账号','icon':'icon-user'},       
        {'app': 'socialaccount','label': '社交账号认证','icon':'icon-user'},       
        {'app': 'auth','label': '认证与授权'},
        '-','-',
        {'app': 'sites','label': '站点'},
        
        
        
        )
    }

# django_logging_setting
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'formatter': 'verbose'
        },
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'logs/blog.log',
            'formatter': 'verbose'
        },

        'file_to_sendemail': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'logs/blog_sendemail.log',
            'formatter': 'verbose'
        }
    },
    'loggers': {
        'django': {
            'handlers': ['console','file'],
            'propagate': True,
        },
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': False,
        },
        'main_article': {
            'handlers': ['console', 'mail_admins','file'],
            'level': 'INFO',
            
        },
        'send_email': {
            'handlers': ['console', 'mail_admins','file_to_sendemail'],
            'level': 'INFO',
            
        }
    }
}

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/
# static root
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static_collected')
# media root
MEDIA_ROOT = os.path.join(BASE_DIR,'media')
MEDIA_URL='/media/'

# ckeditor setting
CKEDITOR_UPLOAD_PATH = 'upload/'
CKEDITOR_IMAGE_BACKEND = 'pillow'
CKEDITOR_ALLOW_NONIMAGE_FILES = True
CKEDITOR_RESTRICT_BY_USER = True
CKEDITOR_RESTRICT_BY_DATE = True
CKEDITOR_BROWSE_SHOW_DIRS = True


# 设置redis缓存

CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': "127.0.0.1:6379",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        },
    },
}


CKEDITOR_CONFIGS = {
    'default': {
        #'removePlugins':'stylesheetparser',
        # 编辑器的宽高请根据你的页面自行设置
        #设置enter键利用<br>标签换行，shiftenter键使用<p>段落     
        #'width':'auto'
        'language':'zh-hans',
        'width':'auto',
        'height':'630px',
        'image_previewText':'点击上传->浏览选择照片->上传到服务器,左边可以调整图片大小,宽度不能超过750/////若要添加视频按链接按钮（CTRL+L）浏览服务器上传视频即可',
        'tabSpaces': 4,
        'toolbar': 'Custom',
        
        'toolbar_Custom': [
            
            {'name':'base_style',
             'items':['Bold', 'Italic', 'Underline', 'TextColor', 'BGColor','Format', 'Strike', 'Font', 'FontSize','RemoveFormat']},
                           
            {'name':'base_paragraph',                      
             'items':['NumberedList', 'BulletedList','Blockquote','Outdent', 'Indent','-','JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock']},
                           
            {'name':'insert',                
             'items':['Image','-','Flash', 'Iframe', '-', 'Table', '-','CodeSnippet', '-','Youtube','Link', 'Unlink','Anchor']},
                           
            {'name':'math_expression',               
            'items':['Subscript', 'Superscript', '-', 'HorizontalRule','SpecialChar', 'Smiley','Undo', 'Redo']},
                                          
            {'name':'feature',               
            'items':['Source', 'Preview', 'Save','Maximize']},
        ],
        'extraPlugins': ','.join(['div',
                                  'autolink',
                                  'autoembed',
                                  'embedsemantic',
                                  'clipboard',
                                  'dialog',
                                  'dialogui',
                                  'elementspath',
                                  'codesnippet',
                                  'uploadimage',
                                  'uploadwidget',
                                  'widget',
                                  'lineutils',
                                  'iframedialog',
                                  'embedbase',
                                  'flash',
                                  'youtube',                   
                                  'prism']),
    }
    ,'comment': {
        #'removePlugins':'stylesheetparser',
        # 编辑器的宽高请根据你的页面自行设置
        #设置enter键利用<br>标签换行，shiftenter键使用<p>段落    
        
        'language':'zh-cn',
        'width':'auto',
        'height':'auto',
        'image_previewText':' ',
        'tabSpaces': 4,
        'toolbar': 'Custom',
        'toolbar_Custom': [
            
            {'name':'base_style',
             'items':['Bold','Underline','TextColor','Format','RemoveFormat','CodeSnippet']},
                                     
            #{'name':'insert',                
            #'items':['Image']},
                           
                                          
        ],
        'extraPlugins': ','.join(['div',
                                  'autolink',
                                  'autoembed',
                                  'embedsemantic',
                                  'clipboard',
                                  'dialog',
                                  'dialogui',
                                  'elementspath',
                                  'codesnippet',
                                  'uploadimage',
                                  'widget',
                                  'lineutils',
                                  'prism']),
    }
    ,'guestbook':{
        #'removePlugins':'stylesheetparser',
        # 编辑器的宽高请根据你的页面自行设置
        #设置enter键利用<br>标签换行，shiftenter键使用<p>段落    
        
        'language':'zh-cn',
        'width':'auto',
        'height':'500px',
        'image_previewText':'点击上传->浏览选择照片->上传到服务器,左边可以调整图片大小,宽度不能超过750/////若要添加视频按链接按钮（CTRL+L）浏览服务器上传视频即可',
        'tabSpaces': 4,
        'toolbar': 'Custom',
        'toolbar_Custom': [
            
            {'name':'base_style',
             'items':['Bold', 'Italic', 'Underline', 'TextColor', 'BGColor','Format', 'Font', 'FontSize','RemoveFormat','CodeSnippet','Image']},
                                     
            #{'name':'insert',                
            #'items':['Image']},
                           
                                          
        ],
        'extraPlugins': ','.join(['div',
                                  'autolink',
                                  'autoembed',
                                  'embedsemantic',
                                  'clipboard',
                                  'dialog',
                                  'dialogui',
                                  'elementspath',
                                  'codesnippet',
                                  'uploadimage',
                                  'widget',
                                  'lineutils',
                                  'prism']),
    }                
}
#Authentication 身份验证
AUTHENTICATION_BACKENDS = (
# django admin所使用的用户登录与django-allauth无关
    'django.contrib.auth.backends.ModelBackend',

# `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
)

SITE_ID = 1
#使用者认证的方式采用用户名或者email的方式来登录
ACCOUNT_AUTHENTICATION_METHOD = 'username_email'
ACCOUNT_EMAIL_REQUIRED = True #注册时必须填写email
ACCOUNT_ADAPTER = 'main_article.forms.Myadapter'
# email setting

#当用户不在线时候发送邮件
SEND_NOTIFICATION_EMAIL = True
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.163.com'
EMAIL_PORT = 25
EMAIL_HOST_USER = 'bhg889@163.com'
EMAIL_HOST_PASSWORD = 'aa556689'
EMAIL_SUBJECT_PREFIX = '[zzr的博客]'
EMAIL_USE_TLS = True

####
DEFAULT_FROM_EMAIL = 'bhg889 <bhg889@163.com>'
#登录跳转
LOGIN_REDIRECT_URL = '/' 
#注册需要登录邮箱验证-mandatory：必须要登录邮箱验证，optional：无需登录邮箱验证但是还会发送邮箱，none：不发送
ACCOUNT_EMAIL_VERIFICATION = 'optional' 
#第三方登录需要邮箱验证
SOCIALACCOUNT_EMAIL_VERIFICATION = 'none'
#邮箱链接跳转
LOGIN_URL = '/accounts/login'
#取消注销确认
ACCOUNT_LOGOUT_ON_GET = True
'''
验证电子邮件装饰器，即在需要验证电子邮件的视图函数上在上@verified_email_required
如果用户没有登录，它将与login_required装饰器相同 。
如果用户登录但没有验证的电子邮件地址，则会自动重新发送电子邮件验证邮件，并向用户显示通知他们需要验证其电子邮件地址的页面。
'''


'''
#ACCOUNT_LOGIN_ON_PASSWORD_RESET = False(default)
By changing this setting to True, 
users will automatically be logged in once they have reset their password. 
By default they are redirected to the password reset donepage.

'''


'''
ACCOUNT_SESSION_REMEMBER (=None) Controls the life time of the session. 
Set to None to ask the user
(“Remember me?”), False to not remember, and True to always remember.
'''
#crispy_forms css[bootstrap,bootstrap3,bootstrap4]
CRISPY_TEMPLATE_PACK = 'bootstrap4'
#
COMMENT_ENTRY_MODEL = 'main_article.Article'
#app的models类继承(AbstractUser)时候要重再AUTH_USER_MODEL
AUTH_USER_MODEL = 'auth.user'
 
#设置通知人
ADMINS = (('zzr', '506862754@qq.com'),) 
#online_status,5分钟(300秒)视为不在线，不填默认600秒
USER_ONLINE_TIMEOUT = 300
#private_chat 私信设置，本机port:5002
CHAT_WS_SERVER_HOST = '127.0.0.1'
CHAT_WS_SERVER_PORT = 5002
CHAT_WS_SERVER_PROTOCOL = 'ws'


# 设置分页
SET_PAGE_FOR_ARTICLES = 7